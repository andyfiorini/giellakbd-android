<?xml version="1.0" encoding="UTF-8"?>
<project name="sami_keyboard">
<target name="-get-cores">
    <property environment="env"/>
    <!-- support for Windows -->
    <condition property="cores.count" value="${env.NUMBER_OF_PROCESSORS}">
        <os family="windows" />
    </condition>
    <!-- support for Linux and Solaris (package SUNWgnu-coreutils is required) -->
    <exec executable="nproc" outputproperty="cores.count" os="Linux,SunOS,Solaris">
        <arg value="--all"/>
    </exec>
    <!-- support for Mac OS X -->
    <exec executable="sysctl" outputproperty="cores.count" os="Mac OS X">
        <arg value="-n"/>
        <arg value="hw.ncpu"/>
    </exec>
</target>

<target name="-pre-build" depends="-get-cores">
	<exec executable="${ndk.dir}/ndk-build" failonerror="true">
		<arg value="-j${cores.count}"/>
	</exec>
</target>

<target name="clean" depends="android_rules.clean">
	<exec executable="${ndk.dir}/ndk-build" failonerror="true">
		<arg value="clean"/>
	</exec>
</target>
<target name="-package-resources" depends="-crunch">
        <!-- only package resources if *not* a library project -->
        <do-only-if-not-library elseText="Library project: do not package resources..." >
            <aapt executable="${aapt}"
                    command="package"
                    versioncode="${version.code}"
                    versionname="${version.name}"
                    debug="${build.is.packaging.debug}"
                    manifest="${out.manifest.abs.file}"
                    manifestpackage="${package.name}"
                    assets="${asset.absolute.dir}"
                    androidjar="${project.target.android.jar}"
                    apkfolder="${out.absolute.dir}"
                    nocrunch="${build.packaging.nocrunch}"
                    resourcefilename="${resource.package.file.name}"
                    resourcefilter="${aapt.resource.filter}"
                    libraryResFolderPathRefid="project.library.res.folder.path"
                    libraryPackagesRefid="project.library.packages"
                    libraryRFileRefid="project.library.bin.r.file.path"
                    previousBuildType="${build.last.target}"
                    buildType="${build.target}"
                    ignoreAssets="${aapt.ignore.assets}">
                <res path="${out.res.absolute.dir}" />
                <res path="${resource.absolute.dir}" />
                <!-- will crash otherwise -->
                <nocompress extension="dict" />
            </aapt>
        </do-only-if-not-library>
    </target>
</project>
